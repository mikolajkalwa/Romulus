/* eslint-disable */
const { Language, util } = require('klasa');

module.exports = class extends Language {

  constructor(...args) {
    super(...args);
    this.language = {
      DEFAULT: (key) => `${key} jeszcze nie zostało przetłumaczone na język polski.`,
      DEFAULT_LANGUAGE: 'Język domyślny',
      PREFIX_REMINDER: (prefix = `@${this.client.user.tag}`) => `Prefiks${Array.isArray(prefix) ?
        `ami na tym serwerze są: ${prefix.map(pre => `\`${pre}\``).join(', ')}` :
        `em na tym serwerze jest: \`${prefix}\``
        }`,
      SETTING_GATEWAY_EXPECTS_GUILD: 'Parametr <Guild> oczekuje Guild lub obiektu typu Guild.',
      SETTING_GATEWAY_VALUE_FOR_KEY_NOEXT: (data, key) => `Dla klucza ${key} nie istnieje wartość ${data}.`,
      SETTING_GATEWAY_VALUE_FOR_KEY_ALREXT: (data, key) => `Dla klucza ${key} istnieje już wartość ${data}.`,
      SETTING_GATEWAY_SPECIFY_VALUE: 'Należy określić wartość do dodania lub przefiltrowania.',
      SETTING_GATEWAY_KEY_NOT_ARRAY: (key) => `Klucz ${key} nie jest tablicą.`,
      SETTING_GATEWAY_KEY_NOEXT: (key) => `Klucz ${key} nie istnieje w aktualnym schemacie.`,
      SETTING_GATEWAY_INVALID_TYPE: 'The type parameter must be either add or remove.',
      SETTING_GATEWAY_INVALID_FILTERED_VALUE: (piece, value) => `${piece.key} nie akceptuje wartości: ${value}`,
      RESOLVER_MULTI_TOO_FEW: (name, min = 1) => `Provided too few ${name}s. At least ${min} ${min === 1 ? 'is' : 'are'} required.`,
      RESOLVER_INVALID_BOOL: (name) => `${name} musi być wartością true lub false.`,
      RESOLVER_INVALID_CHANNEL: (name) => `${name} musi być oznaczeniem kanału lub prawidłowym id kanału.`,
      RESOLVER_INVALID_CUSTOM: (name, type) => `${name} musi być prawidłową wartością typu ${type}.`,
      RESOLVER_INVALID_DATE: (name) => `${name} musi być prawidłową datą.`,
      RESOLVER_INVALID_DURATION: (name) => `${name} must be a valid duration string.`,
      RESOLVER_INVALID_EMOJI: (name) => `${name} musi być customową emoji lub prawidłowym id emoji.`,
      RESOLVER_INVALID_FLOAT: (name) => `${name} musi być prawidłową liczbą.`,
      RESOLVER_INVALID_GUILD: (name) => `${name} musi być prawidłowym id guilda.`,
      RESOLVER_INVALID_INT: (name) => `${name} musi być liczbą całkowitą.`,
      RESOLVER_INVALID_LITERAL: (name) => `Nieprawidłowy wybór: ${name}`,
      RESOLVER_INVALID_MEMBER: (name) => `${name} musi być wzmianką lub prawidłowym id użytkownika.`,
      RESOLVER_INVALID_MESSAGE: (name) => `${name} musi być prawidłowym id wiadomości.`,
      RESOLVER_INVALID_PIECE: (name, piece) => `${name} must be a valid ${piece} name.`,
      RESOLVER_INVALID_REGEX_MATCH: (name, pattern) => `${name} must follow this regex pattern \`${pattern}\`.`,
      RESOLVER_INVALID_ROLE: (name) => `${name} musi być wzmianką roli lub prawidłoym id roli.`,
      RESOLVER_INVALID_STRING: (name) => `${name} musi być prawidłowym łańcuchem znaków.`,
      RESOLVER_INVALID_TIME: (name) => `${name} must be a valid duration or date string.`,
      RESOLVER_INVALID_URL: (name) => `${name} musi być prawdiłowym adresem URL.`,
      RESOLVER_INVALID_USER: (name) => `${name} musi być wzmianką lub prawidłowym id użytkownika.`,
      RESOLVER_STRING_SUFFIX: ' znaków',
      RESOLVER_MINMAX_EXACTLY: (name, min, suffix) => `${name} musi mieć conajmniej ${min}${suffix}.`,
      RESOLVER_MINMAX_BOTH: (name, min, max, suffix) => `${name} musi mieć pomiędzy ${min} a ${max}${suffix}.`,
      RESOLVER_MINMAX_MIN: (name, min, suffix) => `${name} musi być dłuższe niż ${min}${suffix}.`,
      RESOLVER_MINMAX_MAX: (name, max, suffix) => `${name} musi być krótsze niż ${max}${suffix}.`,
      REACTIONHANDLER_PROMPT: 'Na którą stronę przejść?',
      COMMANDMESSAGE_MISSING: 'Nie podano wszystkich wymaganych parametrów.',
      COMMANDMESSAGE_MISSING_REQUIRED: (name) => `${name} jest wymaganym parametrem.`,
      COMMANDMESSAGE_MISSING_OPTIONALS: (possibles) => `Missing a required option: (${possibles})`,
      COMMANDMESSAGE_NOMATCH: (possibles) => `Your option didn't match any of the possibilities: (${possibles})`,
      // eslint-disable-next-line max-len
      MONITOR_COMMAND_HANDLER_REPROMPT: (tag, error, time, abortOptions) => `${tag} | **${error}** | You have **${time}** seconds to respond to this prompt with a valid argument. Type **${abortOptions.join('**, **')}** to abort this prompt.`,
      // eslint-disable-next-line max-len
      MONITOR_COMMAND_HANDLER_REPEATING_REPROMPT: (tag, name, time, cancelOptions) => `${tag} | **${name}** is a repeating argument | You have **${time}** seconds to respond to this prompt with additional valid arguments. Type **${cancelOptions.join('**, **')}** to cancel this prompt.`,
      MONITOR_COMMAND_HANDLER_ABORTED: 'Aborted',
      INHIBITOR_COOLDOWN: (remaining) => `Możesz użyć tej komendy ponownie w ciągu ${remaining} sekund`,
      INHIBITOR_DISABLED_GUILD: 'Komenda została wyłączona przez administratora tego serwera.',
      INHIBITOR_DISABLED_GLOBAL: 'Komenda została globalnie wyłączona przez właściciela bota.',
      INHIBITOR_MISSING_BOT_PERMS: (missing) => `Niewystarczjące uprawnienia, brakuje: **${missing}**`,
      INHIBITOR_NSFW: 'Komendy NSFW mogą być używane tylko na kanałach oznaczonych jako NSFW.',
      INHIBITOR_PERMISSIONS: 'Nie masz wystarczających uprawnień aby użyć tej komendy.',
      INHIBITOR_REQUIRED_SETTINGS: (settings) => `The guild is missing the **${settings.join(', ')}** guild setting${settings.length !== 1 ? 's' : ''} and thus the command cannot run.`,
      INHIBITOR_RUNIN: (types) => `This command is only available in ${types} channels.`,
      INHIBITOR_RUNIN_NONE: (name) => `The ${name} command is not configured to run in any channel.`,
      COMMAND_BLACKLIST_DESCRIPTION: 'Blacklists or un-blacklists users and guilds from the bot.',
      COMMAND_BLACKLIST_SUCCESS: (usersAdded, usersRemoved, guildsAdded, guildsRemoved) => [
        usersAdded.length ? `**Users Added**\n${util.codeBlock('', usersAdded.join(', '))}` : '',
        usersRemoved.length ? `**Users Removed**\n${util.codeBlock('', usersRemoved.join(', '))}` : '',
        guildsAdded.length ? `**Guilds Added**\n${util.codeBlock('', guildsAdded.join(', '))}` : '',
        guildsRemoved.length ? `**Guilds Removed**\n${util.codeBlock('', guildsRemoved.join(', '))}` : ''
      ].filter(val => val !== '').join('\n'),
      COMMAND_EVAL_DESCRIPTION: 'Evaluates arbitrary Javascript. Reserved for bot owner.',
      COMMAND_EVAL_EXTENDEDHELP: [
        'The eval command evaluates code as-in, any error thrown from it will be handled.',
        'It also uses the flags feature. Write --silent, --depth=number or --async to customize the output.',
        'The --silent flag will make it output nothing.',
        "The --depth flag accepts a number, for example, --depth=2, to customize util.inspect's depth.",
        'The --async flag will wrap the code into an async function where you can enjoy the use of await, however, if you want to return something, you will need the return keyword.',
        'The --showHidden flag will enable the showHidden option in util.inspect.',
        'If the output is too large, it\'ll send the output as a file, or in the console if the bot does not have the ATTACH_FILES permission.'
      ].join('\n'),
      COMMAND_EVAL_ERROR: (time, output, type) => `**Error**:${output}\n**Type**:${type}\n${time}`,
      COMMAND_EVAL_OUTPUT: (time, output, type) => `**Output**:${output}\n**Type**:${type}\n${time}`,
      COMMAND_EVAL_SENDFILE: (time, type) => `Output was too long... sent the result as a file.\n**Type**:${type}\n${time}`,
      COMMAND_EVAL_SENDCONSOLE: (time, type) => `Output was too long... sent the result to console.\n**Type**:${type}\n${time}`,
      COMMAND_UNLOAD: (type, name) => `✅ Unloaded ${type}: ${name}`,
      COMMAND_UNLOAD_DESCRIPTION: 'Unloads the klasa piece.',
      COMMAND_UNLOAD_WARN: 'You probably don\'t want to unload that, since you wouldn\'t be able to run any command to enable it again',
      COMMAND_TRANSFER_ERROR: '❌ That file has been transfered already or never existed.',
      COMMAND_TRANSFER_SUCCESS: (type, name) => `✅ Successfully transferred ${type}: ${name}.`,
      COMMAND_TRANSFER_FAILED: (type, name) => `Transfer of ${type}: ${name} to Client has failed. Please check your Console.`,
      COMMAND_TRANSFER_DESCRIPTION: 'Transfers a core piece to its respective folder.',
      COMMAND_RELOAD: (type, name, time) => `✅ Reloaded ${type}: ${name}. (Took: ${time})`,
      COMMAND_RELOAD_FAILED: (type, name) => `❌ Failed to reload ${type}: ${name}. Please check your Console.`,
      COMMAND_RELOAD_ALL: (type, time) => `✅ Reloaded all ${type}. (Took: ${time})`,
      COMMAND_RELOAD_EVERYTHING: (time) => `✅ Reloaded everything. (Took: ${time})`,
      COMMAND_RELOAD_DESCRIPTION: 'Reloads a klasa piece, or all pieces of a klasa store.',
      COMMAND_REBOOT: 'Rebooting...',
      COMMAND_REBOOT_DESCRIPTION: 'Reboots the bot.',
      COMMAND_LOAD: (time, type, name) => `✅ Successfully loaded ${type}: ${name}. (Took: ${time})`,
      COMMAND_LOAD_FAIL: 'The file does not exist, or an error occurred while loading your file. Please check your console.',
      COMMAND_LOAD_ERROR: (type, name, error) => `❌ Failed to load ${type}: ${name}. Reason:${util.codeBlock('js', error)}`,
      COMMAND_LOAD_DESCRIPTION: 'Load a piece from your bot.',
      COMMAND_PING: 'Ping?',
      COMMAND_PING_DESCRIPTION: 'Sprawdza połączenie z serwerami Discorda.',
      COMMAND_PINGPONG: (diff, ping) => `Pong! (Roundtrip took: ${diff}ms. Heartbeat: ${ping}ms.)`,
      COMMAND_INVITE: () => [
        `To add ${this.client.user.username} to your discord guild:`,
        `<${this.client.invite}>`,
        util.codeBlock('', [
          'The above link is generated requesting the minimum permissions required to use every command currently.',
          'I know not all permissions are right for every guild, so don\'t be afraid to uncheck any of the boxes.',
          'If you try to use a command that requires more permissions than the bot is granted, it will let you know.'
        ].join(' ')),
        'Please file an issue at <https://github.com/dirigeants/klasa> if you find any bugs.'
      ],
      COMMAND_INVITE_DESCRIPTION: 'Displays the invite link of the bot, to invite it to your guild.',
      COMMAND_INFO: [
        "Klasa is a 'plug-and-play' framework built on top of the Discord.js library.",
        'Most of the code is modularized, which allows developers to edit Klasa to suit their needs.',
        '',
        'Some features of Klasa include:',
        '• 🐇💨 Fast loading times with ES2017 support (`async`/`await`)',
        '• 🎚🎛 Per-client/guild/user settings that can be extended with your own fields',
        '• 💬 Customizable command system with automated parameter resolving and the ability to load/reload commands on-the-fly',
        '• 👀 "Monitors", which can watch messages and edits (for swear filters, spam protection, etc.)',
        '• ⛔ "Inhibitors", which can prevent commands from running based on any condition you wish to apply (for permissions, blacklists, etc.)',
        '• 🗄 "Providers", which simplify usage of any database of your choosing',
        '• ✅ "Finalizers", which run after successful commands (for logging, collecting stats, cleaning up responses, etc.)',
        '• ➕ "Extendables", which passively add methods, getters/setters, or static properties to existing Discord.js or Klasa classes',
        '• 🌐 "Languages", which allow you to localize your bot\'s responses',
        '• ⏲ "Tasks", which can be scheduled to run in the future, optionally repeating',
        '',
        'We hope to be a 100% customizable framework that can cater to all audiences. We do frequent updates and bugfixes when available.',
        "If you're interested in us, check us out at https://klasa.js.org"
      ],
      COMMAND_INFO_DESCRIPTION: 'Informacje o bocie.',
      COMMAND_HELP_DESCRIPTION: 'Wyświetla pomoc dla danej komendy.',
      COMMAND_HELP_NO_EXTENDED: 'No extended help available.',
      COMMAND_HELP_DM: '📥 | Lista dostępnych komend została wysłana w prywatnej wiadomości.',
      COMMAND_HELP_NODM: '❌ | Masz wyłączoną możliwość odbierania prywatnych wiadomości, nie można wysłać Ci listy komend.',
      COMMAND_HELP_USAGE: (usage) => `Użycie :: ${usage}`,
      COMMAND_HELP_EXTENDED: 'Extended Help ::',
      COMMAND_ENABLE: (type, name) => `+ Successfully enabled ${type}: ${name}`,
      COMMAND_ENABLE_DESCRIPTION: 'Re-enables or temporarily enables a command/inhibitor/monitor/finalizer. Default state restored on reboot.',
      COMMAND_DISABLE: (type, name) => `+ Successfully disabled ${type}: ${name}`,
      COMMAND_DISABLE_DESCRIPTION: 'Re-disables or temporarily disables a command/inhibitor/monitor/finalizer/event. Default state restored on reboot.',
      COMMAND_DISABLE_WARN: 'You probably don\'t want to disable that, since you wouldn\'t be able to run any command to enable it again',
      COMMAND_CONF_NOKEY: 'You must provide a key',
      COMMAND_CONF_NOVALUE: 'You must provide a value',
      COMMAND_CONF_GUARDED: (name) => `${util.toTitleCase(name)} nie może zostać wyłączona.`,
      COMMAND_CONF_UPDATED: (key, response) => `Successfully updated the key **${key}**: \`${response}\``,
      COMMAND_CONF_KEY_NOT_ARRAY: 'This key is not array type. Use the action \'reset\' instead.',
      COMMAND_CONF_GET_NOEXT: (key) => `The key **${key}** does not seem to exist.`,
      COMMAND_CONF_GET: (key, value) => `The value for the key **${key}** is: \`${value}\``,
      COMMAND_CONF_RESET: (key, response) => `The key **${key}** has been reset to: \`${response}\``,
      COMMAND_CONF_NOCHANGE: (key) => `**${key}** już ma taką wartość.`,
      COMMAND_CONF_SERVER_DESCRIPTION: 'Definiowanie ustawień serwera.',
      COMMAND_CONF_SERVER: (key, list) => `**Ustawienia serwera ${key}**\n${list}`,
      COMMAND_CONF_USER_DESCRIPTION: 'Definiowanie ustawień użytkownika.',
      COMMAND_CONF_USER: (key, list) => `**Ustawienia użytkownika ${key}**\n${list}`,
      COMMAND_STATS: (memUsage, uptime, users, guilds, channels, klasaVersion, discordVersion, processVersion, message) => [
        '= STATYSTYKI =',
        '',
        `• Użycie pamięci :: ${memUsage} MB`,
        `• Czas działania :: ${uptime}`,
        `• Użytkownicy    :: ${users}`,
        `• Serwery        :: ${guilds}`,
        `• Kanały         :: ${channels}`,
        `• Klasa          :: v${klasaVersion}`,
        `• Discord.js     :: v${discordVersion}`,
        `• Node.js        :: ${processVersion}`,
        `• Shard          :: ${(message.guild ? message.guild.shardID : 0) + 1} / ${this.client.options.totalShardCount}`
      ],
      COMMAND_STATS_DESCRIPTION: 'Statystyki bota.',
      MESSAGE_PROMPT_TIMEOUT: 'The prompt has timed out.',
      TEXT_PROMPT_ABORT_OPTIONS: ['abort', 'stop', 'cancel']
    };
  }

  async init() {
    await super.init();
  }

};